{"ast":null,"code":"var _jsxFileName = \"C:\\\\prac\\\\patikaprac\\\\src\\\\components\\\\ExchangeC.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Stack from '@mui/material/Stack';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExchangeC() {\n  _s();\n\n  const accounts = [{\n    label: 'Dolar'\n  }, {\n    label: 'Tl'\n  }, {\n    label: 'Altın'\n  }, {\n    label: 'Euro'\n  }];\n  const [soldAccountType, setSoldAccountType] = useState();\n  const [receivedAccountType, setReceivedAccountType] = useState();\n  const [soldAmount, setSoldAmount] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n\n  const handleSoldAccountType = value => {\n    setSoldAccountType(value);\n  };\n\n  const handleReceivedAccountType = value => {\n    setReceivedAccountType(value);\n  };\n\n  const handleSoldAmount = value => {\n    setSoldAmount(value);\n  };\n\n  if (soldAccountType == \"Dolar\" && receivedAccountType == \"Tl\") {\n    setExchangeRate(Math.floor(Math.random() * 20) + 15);\n  } else if (soldAccountType == \"Euro\" && receivedAccountType == \"Tl\") {\n    setExchangeRate(Math.floor(Math.random() * 22) + 17);\n  } else if (soldAccountType == \"Altın\" && receivedAccountType == \"Tl\") {\n    setExchangeRate(Math.floor(Math.random() * 1000) + 900);\n  } else if (soldAccountType == \"Tl\" && receivedAccountType == \"Dolar\") {\n    setExchangeRate(Math.floor(Math.random() * 22) + 17);\n  } else if (soldAccountType == \"Euro\" && receivedAccountType == \"Dolar\") {\n    setExchangeRate(Math.floor(Math.random() * 1) + 0.97);\n  } else if (soldAccountType == \"Altın\" && receivedAccountType == \"Dolar\") {\n    setExchangeRate(Math.floor(Math.random() * 55) + 50);\n  } else if (soldAccountType == \"Tl\" && receivedAccountType == \"Euro\") {\n    setExchangeRate(Math.floor(Math.random() * 0.06) + 0.04);\n  } else if (soldAccountType == \"Dolar\" && receivedAccountType == \"Euro\") {\n    setExchangeRate(Math.floor(Math.random() * 1.1) + 0.9);\n  } else if (soldAccountType == \"Altın\" && receivedAccountType == \"Euro\") {\n    setExchangeRate(Math.floor(Math.random() * 60) + 50);\n  } else if (soldAccountType == \"Tl\" && receivedAccountType == \"Altın\") {\n    setExchangeRate(Math.floor(Math.random() * 0.06) + 0.04);\n  } else if (soldAccountType == \"Dolar\" && receivedAccountType == \"Altın\") {\n    setExchangeRate(Math.floor(Math.random() * 1.1) + 0.9);\n  } else if (soldAccountType == \"Euro\" && receivedAccountType == \"Altın\") {\n    setExchangeRate(Math.floor(Math.random() * 60) + 50);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      sx: {\n        width: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"combo-box-demo\",\n        options: accounts,\n        sx: {\n          width: 300\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: \"Sold\",\n          onChange: i => handleSoldAccountType(i.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"combo-box-demo\",\n        options: accounts,\n        sx: {\n          width: 300\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: \"Received\",\n          onChange: event => setReceivedAccountType(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"Sold Amount\",\n        variant: \"standard\",\n        onChange: event => setSoldAmount(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: exchangeRate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ExchangeC, \"H9lQD8fTOUCTqiMzD5taCyn3J/4=\");\n\n_c = ExchangeC;\nexport default ExchangeC;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExchangeC\");","map":{"version":3,"names":["React","TextField","Autocomplete","Stack","useState","ExchangeC","accounts","label","soldAccountType","setSoldAccountType","receivedAccountType","setReceivedAccountType","soldAmount","setSoldAmount","exchangeRate","setExchangeRate","handleSoldAccountType","value","handleReceivedAccountType","handleSoldAmount","Math","floor","random","width","params","i","target","event"],"sources":["C:/prac/patikaprac/src/components/ExchangeC.js"],"sourcesContent":["import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Stack from '@mui/material/Stack';\r\nimport { useState } from 'react';\r\nfunction ExchangeC() {\r\n    const accounts = [\r\n        { label: 'Dolar' },\r\n        { label: 'Tl' },\r\n        { label: 'Altın' },\r\n        { label: 'Euro' },\r\n\r\n    ];\r\n    const [soldAccountType, setSoldAccountType] = useState();\r\n    const [receivedAccountType, setReceivedAccountType] = useState();\r\n    const [soldAmount, setSoldAmount] = useState();\r\n    const [exchangeRate, setExchangeRate] = useState();\r\n\r\n    const handleSoldAccountType = (value) => {\r\n        setSoldAccountType(value);\r\n    }\r\n    const handleReceivedAccountType = (value) => {\r\n        setReceivedAccountType(value);\r\n    }\r\n    const handleSoldAmount = (value) => {\r\n        setSoldAmount(value);\r\n    }\r\n\r\n    if (soldAccountType==\"Dolar\" && receivedAccountType==\"Tl\") {\r\n            setExchangeRate(Math.floor(Math.random() * 20) + 15);\r\n    } \r\n    else if (soldAccountType==\"Euro\" && receivedAccountType==\"Tl\") {\r\n        setExchangeRate(Math.floor(Math.random() * 22) + 17);\r\n    }\r\n    else if (soldAccountType==\"Altın\" && receivedAccountType==\"Tl\") {\r\n        setExchangeRate(Math.floor(Math.random() * 1000) + 900);\r\n    }\r\n    else if (soldAccountType==\"Tl\" && receivedAccountType==\"Dolar\") {\r\n        setExchangeRate(Math.floor(Math.random() * 22) + 17);\r\n    }\r\n    else if (soldAccountType==\"Euro\" && receivedAccountType==\"Dolar\") {\r\n        setExchangeRate(Math.floor(Math.random() * 1) + 0.97);\r\n    }\r\n    else if (soldAccountType==\"Altın\" && receivedAccountType==\"Dolar\") {\r\n        setExchangeRate(Math.floor(Math.random() * 55) + 50);\r\n    }\r\n    else if (soldAccountType==\"Tl\" && receivedAccountType==\"Euro\") {\r\n        setExchangeRate(Math.floor(Math.random() * 0.06) + 0.04);\r\n    }\r\n    else if (soldAccountType==\"Dolar\" && receivedAccountType==\"Euro\") {\r\n        setExchangeRate(Math.floor(Math.random() * 1.1) + 0.9);\r\n    }\r\n    else if (soldAccountType==\"Altın\" && receivedAccountType==\"Euro\") {\r\n        setExchangeRate(Math.floor(Math.random() * 60) + 50);\r\n    }\r\n    else if (soldAccountType==\"Tl\" && receivedAccountType==\"Altın\") {\r\n        setExchangeRate(Math.floor(Math.random() * 0.06) + 0.04);\r\n    }\r\n    else if (soldAccountType==\"Dolar\" && receivedAccountType==\"Altın\") {\r\n        setExchangeRate(Math.floor(Math.random() * 1.1) + 0.9);\r\n    }\r\n    else if (soldAccountType==\"Euro\" && receivedAccountType==\"Altın\") {\r\n        setExchangeRate(Math.floor(Math.random() * 60) + 50);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n        <Stack spacing={2} sx={{ width: 300 }}>\r\n            <Autocomplete\r\n                disablePortal\r\n                id=\"combo-box-demo\"\r\n                options={accounts}\r\n                sx={{ width: 300 }}\r\n                renderInput={(params) => <TextField {...params} label=\"Sold\" onChange={(i) => handleSoldAccountType(i.target.value)} />}\r\n            />\r\n            <Autocomplete\r\n                disablePortal\r\n                id=\"combo-box-demo\"\r\n                options={accounts}\r\n                sx={{ width: 300 }}\r\n                renderInput={(params) => <TextField {...params} label=\"Received\" onChange={event=>setReceivedAccountType(event.target.value)}/>}\r\n            />\r\n            <TextField id=\"standard-basic\" label=\"Sold Amount\" variant=\"standard\" onChange={event=>setSoldAmount(event.target.value)}/>\r\n            <label>{exchangeRate}</label>\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\nexport default ExchangeC;"],"mappings":"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"},"metadata":{},"sourceType":"module"}